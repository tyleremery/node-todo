AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  NetworkStackName:
    Type: String
    Default: production
    Description: The name of the parent Fargate networking stack

Resources:
  AppTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: AppService
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn:
        Fn::ImportValue:
          !Join [':', [!Ref 'NetworkStackName', 'ECSTaskExecutionRole']]
      TaskRoleArn: !Ref "AWS::NoValue"
      ContainerDefinitions:
        - Name: AppContainer
          Cpu: 256
          Memory: 512
          Image: 535625691106.dkr.ecr.us-east-1.amazonaws.com/hw-app
          PortMappings:
            - ContainerPort: 80
          Environment:
            - Name: PORT
              Value: 80
            - Name: MONGODBURL
              Value: mongodb://db.svc.hw.tyleremery.net/DB
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/AppService
              awslogs-region: us-east-1
              awslogs-stream-prefix: ecs
              

  AppService:
    Type: AWS::ECS::Service
    DependsOn: LoadBalancerRule
    Properties:
      ServiceName: AppService
      Cluster:
        Fn::ImportValue:
          !Join [':', [!Ref 'NetworkStackName', 'ClusterName']]
      LaunchType: FARGATE
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 75
      DesiredCount: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - Fn::ImportValue:
                !Join [':', [!Ref 'NetworkStackName', 'FargateContainerSecurityGroup']]
          Subnets:
            - Fn::ImportValue:
                !Join [':', [!Ref 'NetworkStackName', 'PublicSubnetOne']]
            - Fn::ImportValue:
                !Join [':', [!Ref 'NetworkStackName', 'PublicSubnetTwo']]
      TaskDefinition: !Ref 'AppTaskDefinition'
      LoadBalancers:
        - ContainerName: AppContainer
          ContainerPort: 80
          TargetGroupArn: !Ref 'TargetGroup'

  DBTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: DBService
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn:
        Fn::ImportValue:
          !Join [':', [!Ref 'NetworkStackName', 'ECSTaskExecutionRole']]
      TaskRoleArn: !Ref "AWS::NoValue"
      ContainerDefinitions:
        - Name: DBContainer
          Cpu: 256
          Memory: 512
          Image: 535625691106.dkr.ecr.us-east-1.amazonaws.com/hw-db
          PortMappings:
            - ContainerPort: 27017
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/DBService
              awslogs-region: us-east-1
              awslogs-stream-prefix: ecs

  DBService:
    Type: AWS::ECS::Service
    DependsOn: DBDiscoveryService
    Properties:
      ServiceName: DBService
      Cluster:
        Fn::ImportValue:
          !Join [':', [!Ref 'NetworkStackName', 'ClusterName']]
      LaunchType: FARGATE
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 75
      DesiredCount: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - Fn::ImportValue:
                !Join [':', [!Ref 'NetworkStackName', 'FargateContainerSecurityGroup']]
          Subnets:
            - Fn::ImportValue:
                !Join [':', [!Ref 'NetworkStackName', 'PublicSubnetOne']]
            - Fn::ImportValue:
                !Join [':', [!Ref 'NetworkStackName', 'PublicSubnetTwo']]
      TaskDefinition: !Ref 'DBTaskDefinition'
      ServiceRegistries:
        - RegistryArn: !GetAtt DBDiscoveryService.Arn
          Port: 27017

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 6
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      TargetType: ip
      Name: AppService
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 2
      VpcId:
        Fn::ImportValue:
          !Join [':', [!Ref 'NetworkStackName', 'VPCId']]


  LoadBalancerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - TargetGroupArn: !Ref 'TargetGroup'
          Type: 'forward'
      Conditions:
        - Field: path-pattern
          Values: 
            - '*'
      ListenerArn:
        Fn::ImportValue:
          !Join [':', [!Ref 'NetworkStackName', 'PublicListener']]
      Priority: 1
  
  DBServiceDiscoveryNameSpace:
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
    Properties:
      Vpc: 
        Fn::ImportValue:
          !Join [':', [!Ref 'NetworkStackName', 'VPCId']]
      Name: svc.hw.tyleremery.net
  
  DBDiscoveryService: 
    Type: AWS::ServiceDiscovery::Service
    Properties:
      HealthCheckCustomConfig: 
        FailureThreshold: 1
      DnsConfig: 
        DnsRecords:
          - TTL: 60
            Type: A
          - TTL: 60
            Type: SRV
      NamespaceId: !Ref DBServiceDiscoveryNameSpace
      Name: db